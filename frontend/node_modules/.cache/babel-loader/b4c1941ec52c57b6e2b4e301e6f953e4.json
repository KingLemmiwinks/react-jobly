{"ast":null,"code":"// import axios from \"axios\";\n// import { TOKEN_STORAGE_ID } from \"./App.js\";\n\n// const BASE_URL = process.env.BASE_URL || \"http://localhost:3001\";\n\n// export default class JoblyApi {\n//   static async request(endpoint, params = {}, verb = \"get\") {\n//     let _token =\n//       localStorage.getItem(TOKEN_STORAGE_ID);\n\n//     console.debug(\"API Call:\", endpoint, params, verb);\n\n//     let q;\n\n//     if (verb === \"get\") {\n//       q = axios.get(`${BASE_URL}/${endpoint}`, {\n//         params: { _token, ...params },\n//       });\n//     } else if (verb === \"post\") {\n//       q = axios.post(`${BASE_URL}/${endpoint}`, { _token, ...params });\n//     } else if (verb === \"patch\") {\n//       q = axios.patch(`${BASE_URL}/${endpoint}`, { _token, ...params });\n//     }\n\n//     try {\n//       return (await q).data;\n//     } catch (err) {\n//       console.error(\"API Error:\", err.response);\n//       let message = err.response.data.message;\n//       throw Array.isArray(message) ? message : [message];\n//     }\n//   }\n\n//   static async getCompany(handle) {\n//     let res = await this.request(`companies/${handle}`);\n//     return res.company;\n//   }\n\n//   static async getCompanies(search) {\n//     let res = await this.request(\"companies\", { search });\n//     return res.companies;\n//   }\n// }\n\nimport axios from \"axios\";\nconst BASE_URL = process.env.REACT_APP_BASE_URL || \"http://localhost:3001\";\n\n/** API Class.\n *\n * Static class tying together methods used to get/send to to the API.\n * There shouldn't be any frontend-specific stuff here, and there shouldn't\n * be any API-aware stuff elsewhere in the frontend.\n *\n */\n\nclass JoblyApi {\n  // the token for interactive with the API will be stored here.\n\n  static async request(endpoint, data = {}, method = \"get\") {\n    console.debug(\"API Call:\", endpoint, data, method);\n\n    //there are multiple ways to pass an authorization token, this is how you pass it in the header.\n    //this has been provided to show you another way to pass the token. you are only expected to read this code for this project.\n    const url = `${BASE_URL}/${endpoint}`;\n    const headers = {\n      Authorization: `Bearer ${JoblyApi.token}`\n    };\n    const params = method === \"get\" ? data : {};\n    try {\n      return (await axios({\n        url,\n        method,\n        data,\n        params,\n        headers\n      })).data;\n    } catch (err) {\n      console.error(\"API Error:\", err.response);\n      let message = err.response.data.error.message;\n      throw Array.isArray(message) ? message : [message];\n    }\n  }\n\n  // Individual API routes\n\n  /** Get details on a company by handle. */\n\n  static async getCompany(handle) {\n    let res = await this.request(`companies/${handle}`);\n    return res.company;\n  }\n  static async getCompanies(search) {\n    let res = await this.request(\"companies\", {\n      search\n    });\n    return res.companies;\n  }\n\n  // obviously, you'll add a lot here ...\n}\n\n// for now, put token (\"testuser\" / \"password\" on class)\nJoblyApi.token = \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZ\" + \"SI6InRlc3R1c2VyIiwiaXNBZG1pbiI6ZmFsc2UsImlhdCI6MTU5ODE1OTI1OX0.\" + \"FtrMwBQwe6Ue-glIFgz_Nf8XxRT2YecFCiSpYL0fCXc\";","map":{"version":3,"names":["axios","BASE_URL","process","env","REACT_APP_BASE_URL","JoblyApi","request","endpoint","data","method","console","debug","url","headers","Authorization","token","params","err","error","response","message","Array","isArray","getCompany","handle","res","company","getCompanies","search","companies"],"sources":["/home/lemmiwinks/react-jobly/frontend/src/api.js"],"sourcesContent":["// import axios from \"axios\";\n// import { TOKEN_STORAGE_ID } from \"./App.js\";\n\n// const BASE_URL = process.env.BASE_URL || \"http://localhost:3001\";\n\n// export default class JoblyApi {\n//   static async request(endpoint, params = {}, verb = \"get\") {\n//     let _token =\n//       localStorage.getItem(TOKEN_STORAGE_ID);\n\n//     console.debug(\"API Call:\", endpoint, params, verb);\n\n//     let q;\n\n//     if (verb === \"get\") {\n//       q = axios.get(`${BASE_URL}/${endpoint}`, {\n//         params: { _token, ...params },\n//       });\n//     } else if (verb === \"post\") {\n//       q = axios.post(`${BASE_URL}/${endpoint}`, { _token, ...params });\n//     } else if (verb === \"patch\") {\n//       q = axios.patch(`${BASE_URL}/${endpoint}`, { _token, ...params });\n//     }\n\n//     try {\n//       return (await q).data;\n//     } catch (err) {\n//       console.error(\"API Error:\", err.response);\n//       let message = err.response.data.message;\n//       throw Array.isArray(message) ? message : [message];\n//     }\n//   }\n\n//   static async getCompany(handle) {\n//     let res = await this.request(`companies/${handle}`);\n//     return res.company;\n//   }\n\n//   static async getCompanies(search) {\n//     let res = await this.request(\"companies\", { search });\n//     return res.companies;\n//   }\n// }\n\nimport axios from \"axios\";\n\nconst BASE_URL = process.env.REACT_APP_BASE_URL || \"http://localhost:3001\";\n\n/** API Class.\n *\n * Static class tying together methods used to get/send to to the API.\n * There shouldn't be any frontend-specific stuff here, and there shouldn't\n * be any API-aware stuff elsewhere in the frontend.\n *\n */\n\nclass JoblyApi {\n  // the token for interactive with the API will be stored here.\n  static token;\n\n  static async request(endpoint, data = {}, method = \"get\") {\n    console.debug(\"API Call:\", endpoint, data, method);\n\n    //there are multiple ways to pass an authorization token, this is how you pass it in the header.\n    //this has been provided to show you another way to pass the token. you are only expected to read this code for this project.\n    const url = `${BASE_URL}/${endpoint}`;\n    const headers = { Authorization: `Bearer ${JoblyApi.token}` };\n    const params = method === \"get\" ? data : {};\n\n    try {\n      return (await axios({ url, method, data, params, headers })).data;\n    } catch (err) {\n      console.error(\"API Error:\", err.response);\n      let message = err.response.data.error.message;\n      throw Array.isArray(message) ? message : [message];\n    }\n  }\n\n  // Individual API routes\n\n  /** Get details on a company by handle. */\n\n  static async getCompany(handle) {\n    let res = await this.request(`companies/${handle}`);\n    return res.company;\n  }\n\n    static async getCompanies(search) {\n      let res = await this.request(\"companies\", { search });\n      return res.companies;\n    }\n\n  // obviously, you'll add a lot here ...\n}\n\n// for now, put token (\"testuser\" / \"password\" on class)\nJoblyApi.token =\n  \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZ\" +\n  \"SI6InRlc3R1c2VyIiwiaXNBZG1pbiI6ZmFsc2UsImlhdCI6MTU5ODE1OTI1OX0.\" +\n  \"FtrMwBQwe6Ue-glIFgz_Nf8XxRT2YecFCiSpYL0fCXc\";"],"mappings":"AAAA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,QAAQ,GAAGC,OAAO,CAACC,GAAG,CAACC,kBAAkB,IAAI,uBAAuB;;AAE1E;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,QAAQ,CAAC;EACb;;EAGA,aAAaC,OAAOA,CAACC,QAAQ,EAAEC,IAAI,GAAG,CAAC,CAAC,EAAEC,MAAM,GAAG,KAAK,EAAE;IACxDC,OAAO,CAACC,KAAK,CAAC,WAAW,EAAEJ,QAAQ,EAAEC,IAAI,EAAEC,MAAM,CAAC;;IAElD;IACA;IACA,MAAMG,GAAG,GAAI,GAAEX,QAAS,IAAGM,QAAS,EAAC;IACrC,MAAMM,OAAO,GAAG;MAAEC,aAAa,EAAG,UAAST,QAAQ,CAACU,KAAM;IAAE,CAAC;IAC7D,MAAMC,MAAM,GAAGP,MAAM,KAAK,KAAK,GAAGD,IAAI,GAAG,CAAC,CAAC;IAE3C,IAAI;MACF,OAAO,CAAC,MAAMR,KAAK,CAAC;QAAEY,GAAG;QAAEH,MAAM;QAAED,IAAI;QAAEQ,MAAM;QAAEH;MAAQ,CAAC,CAAC,EAAEL,IAAI;IACnE,CAAC,CAAC,OAAOS,GAAG,EAAE;MACZP,OAAO,CAACQ,KAAK,CAAC,YAAY,EAAED,GAAG,CAACE,QAAQ,CAAC;MACzC,IAAIC,OAAO,GAAGH,GAAG,CAACE,QAAQ,CAACX,IAAI,CAACU,KAAK,CAACE,OAAO;MAC7C,MAAMC,KAAK,CAACC,OAAO,CAACF,OAAO,CAAC,GAAGA,OAAO,GAAG,CAACA,OAAO,CAAC;IACpD;EACF;;EAEA;;EAEA;;EAEA,aAAaG,UAAUA,CAACC,MAAM,EAAE;IAC9B,IAAIC,GAAG,GAAG,MAAM,IAAI,CAACnB,OAAO,CAAE,aAAYkB,MAAO,EAAC,CAAC;IACnD,OAAOC,GAAG,CAACC,OAAO;EACpB;EAEE,aAAaC,YAAYA,CAACC,MAAM,EAAE;IAChC,IAAIH,GAAG,GAAG,MAAM,IAAI,CAACnB,OAAO,CAAC,WAAW,EAAE;MAAEsB;IAAO,CAAC,CAAC;IACrD,OAAOH,GAAG,CAACI,SAAS;EACtB;;EAEF;AACF;;AAEA;AACAxB,QAAQ,CAACU,KAAK,GACZ,oDAAoD,GACpD,iEAAiE,GACjE,6CAA6C"},"metadata":{},"sourceType":"module"}