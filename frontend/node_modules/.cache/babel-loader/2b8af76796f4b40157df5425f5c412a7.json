{"ast":null,"code":"import axios from \"axios\";\nimport { TOKEN_STORAGE_ID } from \"./App.js\";\nconst BASE_URL = process.env.BASE_URL || \"http://localhost:3001\";\nexport default class JoblyApi {\n  static async request(endpoint, params = {}, verb = \"get\") {\n    let _token = localStorage.getItem(TOKEN_STORAGE_ID);\n    console.debug(\"API Call:\", endpoint, params, verb);\n    let q;\n    if (verb === \"get\") {\n      q = axios.get(`${BASE_URL}/${endpoint}`, {\n        params: {\n          _token,\n          ...params\n        }\n      });\n    } else if (verb === \"post\") {\n      q = axios.post(`${BASE_URL}/${endpoint}`, {\n        _token,\n        ...params\n      });\n    } else if (verb === \"patch\") {\n      q = axios.patch(`${BASE_URL}/${endpoint}`, {\n        _token,\n        ...params\n      });\n    }\n    try {\n      return (await q).data;\n    } catch (err) {\n      console.error(\"API Error:\", err.response);\n      let message = err.response.data.message;\n      throw Array.isArray(message) ? message : [message];\n    }\n  }\n  static async getCompany(handle) {\n    let res = await this.request(`companies/${handle}`);\n    return res.company;\n  }\n  static async getCompanies(search) {\n    let res = await this.request(\"companies\", {\n      search\n    });\n    return res.companies;\n  }\n}\n\n///////////////////////////////////////////////////////\n\n// import axios from \"axios\";\n\n// const BASE_URL = process.env.REACT_APP_BASE_URL || \"http://localhost:3001\";\n\n// /** API Class.\n//  *\n//  * Static class tying together methods used to get/send to to the API.\n//  * There shouldn't be any frontend-specific stuff here, and there shouldn't\n//  * be any API-aware stuff elsewhere in the frontend.\n//  *\n//  */\n\n// class JoblyApi {\n//   // the token for interactive with the API will be stored here.\n//   static token;\n\n//   static async request(endpoint, data = {}, method = \"get\") {\n//     console.debug(\"API Call:\", endpoint, data, method);\n\n//     //there are multiple ways to pass an authorization token, this is how you pass it in the header.\n//     //this has been provided to show you another way to pass the token. you are only expected to read this code for this project.\n//     const url = `${BASE_URL}/${endpoint}`;\n//     const headers = { Authorization: `Bearer ${JoblyApi.token}` };\n//     const params = method === \"get\" ? data : {};\n\n//     try {\n//       return (await axios({ url, method, data, params, headers })).data;\n//     } catch (err) {\n//       console.error(\"API Error:\", err.response);\n//       let message = err.response.data.error.message;\n//       throw Array.isArray(message) ? message : [message];\n//     }\n//   }\n\n//   // Individual API routes\n\n//   /** Get details on a company by handle. */\n\n//   static async getCompany(handle) {\n//     let res = await this.request(`companies/${handle}`);\n//     return res.company;\n//   }\n\n//     static async getCompanies(search) {\n//       let res = await this.request(\"companies\", { search });\n//       return res.companies;\n//     }\n\n//   // obviously, you'll add a lot here ...\n// }\n\n// // for now, put token (\"testuser\" / \"password\" on class)\n// JoblyApi.token =\n//   \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZ\" +\n//   \"SI6InRlc3R1c2VyIiwiaXNBZG1pbiI6ZmFsc2UsImlhdCI6MTU5ODE1OTI1OX0.\" +\n//   \"FtrMwBQwe6Ue-glIFgz_Nf8XxRT2YecFCiSpYL0fCXc\";","map":{"version":3,"names":["axios","TOKEN_STORAGE_ID","BASE_URL","process","env","JoblyApi","request","endpoint","params","verb","_token","localStorage","getItem","console","debug","q","get","post","patch","data","err","error","response","message","Array","isArray","getCompany","handle","res","company","getCompanies","search","companies"],"sources":["/home/lemmiwinks/react-jobly/frontend/src/api.js"],"sourcesContent":["import axios from \"axios\";\nimport { TOKEN_STORAGE_ID } from \"./App.js\";\n\nconst BASE_URL = process.env.BASE_URL || \"http://localhost:3001\";\n\nexport default class JoblyApi {\n  static async request(endpoint, params = {}, verb = \"get\") {\n    let _token =\n      localStorage.getItem(TOKEN_STORAGE_ID);\n\n    console.debug(\"API Call:\", endpoint, params, verb);\n\n    let q;\n\n    if (verb === \"get\") {\n      q = axios.get(`${BASE_URL}/${endpoint}`, {\n        params: { _token, ...params },\n      });\n    } else if (verb === \"post\") {\n      q = axios.post(`${BASE_URL}/${endpoint}`, { _token, ...params });\n    } else if (verb === \"patch\") {\n      q = axios.patch(`${BASE_URL}/${endpoint}`, { _token, ...params });\n    }\n\n    try {\n      return (await q).data;\n    } catch (err) {\n      console.error(\"API Error:\", err.response);\n      let message = err.response.data.message;\n      throw Array.isArray(message) ? message : [message];\n    }\n  }\n\n  static async getCompany(handle) {\n    let res = await this.request(`companies/${handle}`);\n    return res.company;\n  }\n\n  static async getCompanies(search) {\n    let res = await this.request(\"companies\", { search });\n    return res.companies;\n  }\n}\n\n///////////////////////////////////////////////////////\n\n// import axios from \"axios\";\n\n// const BASE_URL = process.env.REACT_APP_BASE_URL || \"http://localhost:3001\";\n\n// /** API Class.\n//  *\n//  * Static class tying together methods used to get/send to to the API.\n//  * There shouldn't be any frontend-specific stuff here, and there shouldn't\n//  * be any API-aware stuff elsewhere in the frontend.\n//  *\n//  */\n\n// class JoblyApi {\n//   // the token for interactive with the API will be stored here.\n//   static token;\n\n//   static async request(endpoint, data = {}, method = \"get\") {\n//     console.debug(\"API Call:\", endpoint, data, method);\n\n//     //there are multiple ways to pass an authorization token, this is how you pass it in the header.\n//     //this has been provided to show you another way to pass the token. you are only expected to read this code for this project.\n//     const url = `${BASE_URL}/${endpoint}`;\n//     const headers = { Authorization: `Bearer ${JoblyApi.token}` };\n//     const params = method === \"get\" ? data : {};\n\n//     try {\n//       return (await axios({ url, method, data, params, headers })).data;\n//     } catch (err) {\n//       console.error(\"API Error:\", err.response);\n//       let message = err.response.data.error.message;\n//       throw Array.isArray(message) ? message : [message];\n//     }\n//   }\n\n//   // Individual API routes\n\n//   /** Get details on a company by handle. */\n\n//   static async getCompany(handle) {\n//     let res = await this.request(`companies/${handle}`);\n//     return res.company;\n//   }\n\n//     static async getCompanies(search) {\n//       let res = await this.request(\"companies\", { search });\n//       return res.companies;\n//     }\n\n//   // obviously, you'll add a lot here ...\n// }\n\n// // for now, put token (\"testuser\" / \"password\" on class)\n// JoblyApi.token =\n//   \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZ\" +\n//   \"SI6InRlc3R1c2VyIiwiaXNBZG1pbiI6ZmFsc2UsImlhdCI6MTU5ODE1OTI1OX0.\" +\n//   \"FtrMwBQwe6Ue-glIFgz_Nf8XxRT2YecFCiSpYL0fCXc\";"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,gBAAgB,QAAQ,UAAU;AAE3C,MAAMC,QAAQ,GAAGC,OAAO,CAACC,GAAG,CAACF,QAAQ,IAAI,uBAAuB;AAEhE,eAAe,MAAMG,QAAQ,CAAC;EAC5B,aAAaC,OAAOA,CAACC,QAAQ,EAAEC,MAAM,GAAG,CAAC,CAAC,EAAEC,IAAI,GAAG,KAAK,EAAE;IACxD,IAAIC,MAAM,GACRC,YAAY,CAACC,OAAO,CAACX,gBAAgB,CAAC;IAExCY,OAAO,CAACC,KAAK,CAAC,WAAW,EAAEP,QAAQ,EAAEC,MAAM,EAAEC,IAAI,CAAC;IAElD,IAAIM,CAAC;IAEL,IAAIN,IAAI,KAAK,KAAK,EAAE;MAClBM,CAAC,GAAGf,KAAK,CAACgB,GAAG,CAAE,GAAEd,QAAS,IAAGK,QAAS,EAAC,EAAE;QACvCC,MAAM,EAAE;UAAEE,MAAM;UAAE,GAAGF;QAAO;MAC9B,CAAC,CAAC;IACJ,CAAC,MAAM,IAAIC,IAAI,KAAK,MAAM,EAAE;MAC1BM,CAAC,GAAGf,KAAK,CAACiB,IAAI,CAAE,GAAEf,QAAS,IAAGK,QAAS,EAAC,EAAE;QAAEG,MAAM;QAAE,GAAGF;MAAO,CAAC,CAAC;IAClE,CAAC,MAAM,IAAIC,IAAI,KAAK,OAAO,EAAE;MAC3BM,CAAC,GAAGf,KAAK,CAACkB,KAAK,CAAE,GAAEhB,QAAS,IAAGK,QAAS,EAAC,EAAE;QAAEG,MAAM;QAAE,GAAGF;MAAO,CAAC,CAAC;IACnE;IAEA,IAAI;MACF,OAAO,CAAC,MAAMO,CAAC,EAAEI,IAAI;IACvB,CAAC,CAAC,OAAOC,GAAG,EAAE;MACZP,OAAO,CAACQ,KAAK,CAAC,YAAY,EAAED,GAAG,CAACE,QAAQ,CAAC;MACzC,IAAIC,OAAO,GAAGH,GAAG,CAACE,QAAQ,CAACH,IAAI,CAACI,OAAO;MACvC,MAAMC,KAAK,CAACC,OAAO,CAACF,OAAO,CAAC,GAAGA,OAAO,GAAG,CAACA,OAAO,CAAC;IACpD;EACF;EAEA,aAAaG,UAAUA,CAACC,MAAM,EAAE;IAC9B,IAAIC,GAAG,GAAG,MAAM,IAAI,CAACtB,OAAO,CAAE,aAAYqB,MAAO,EAAC,CAAC;IACnD,OAAOC,GAAG,CAACC,OAAO;EACpB;EAEA,aAAaC,YAAYA,CAACC,MAAM,EAAE;IAChC,IAAIH,GAAG,GAAG,MAAM,IAAI,CAACtB,OAAO,CAAC,WAAW,EAAE;MAAEyB;IAAO,CAAC,CAAC;IACrD,OAAOH,GAAG,CAACI,SAAS;EACtB;AACF;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module"}