{"ast":null,"code":"var _jsxFileName = \"/home/lemmiwinks/react-jobly/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { decode } from \"jsonwebtoken\";\nimport { ClipLoader } from \"react-spinners\";\nimport useLocalStorage from \"./hooks/useLocalStorage\";\nimport Routes from \"./Routes\";\nimport JoblyApi from \"./JoblyApi\";\nimport UserContext from \"./UserContext\";\nimport AppNav from \"./AppNav\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const TOKEN_STORAGE_ID = \"jobly-token\";\nexport default function App() {\n  _s();\n  const [infoLoaded, setInfoLoaded] = useState(false);\n  const [currentUser, setCurrentUser] = useState(null);\n  const [token, setToken] = useLocalStorage(TOKEN_STORAGE_ID);\n  useEffect(() => {\n    async function getCurrentUser() {\n      try {\n        let {\n          username\n        } = decode(token);\n        let currentUser = await JoblyApi.getCurrentUser(username);\n        setCurrentUser(currentUser);\n      } catch (err) {\n        setCurrentUser(null);\n      }\n      setInfoLoaded(true);\n    }\n    setInfoLoaded(false);\n    getCurrentUser();\n  }, [token]);\n  const handleLogOut = () => {\n    setCurrentUser(null);\n    setToken(null);\n  };\n  if (!infoLoaded) {\n    return /*#__PURE__*/_jsxDEV(ClipLoader, {\n      size: 150,\n      color: \"#123abc\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(UserContext.Provider, {\n    value: {\n      currentUser,\n      setCurrentUser\n    },\n    children: [/*#__PURE__*/_jsxDEV(AppNav, {\n      logout: handleLogOut\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Routes, {\n      setToken: setToken\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"r2zUiwL7+rY/nY4IxCQHgAfLP6I=\", false, function () {\n  return [useLocalStorage];\n});\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","decode","ClipLoader","useLocalStorage","Routes","JoblyApi","UserContext","AppNav","jsxDEV","_jsxDEV","TOKEN_STORAGE_ID","App","_s","infoLoaded","setInfoLoaded","currentUser","setCurrentUser","token","setToken","getCurrentUser","username","err","handleLogOut","size","color","fileName","_jsxFileName","lineNumber","columnNumber","Provider","value","children","logout","_c","$RefreshReg$"],"sources":["/home/lemmiwinks/react-jobly/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { decode } from \"jsonwebtoken\";\nimport { ClipLoader } from \"react-spinners\";\nimport useLocalStorage from \"./hooks/useLocalStorage\";\nimport Routes from \"./Routes\";\nimport JoblyApi from \"./JoblyApi\";\nimport UserContext from \"./UserContext\";\nimport AppNav from \"./AppNav\";\n\nexport const TOKEN_STORAGE_ID = \"jobly-token\";\n\nexport default function App() {\n  const [infoLoaded, setInfoLoaded] = useState(false);\n  const [currentUser, setCurrentUser] = useState(null);\n\n  const [token, setToken] = useLocalStorage(TOKEN_STORAGE_ID);\n\n  useEffect(() => {\n    async function getCurrentUser() {\n      try {\n        let { username } = decode(token);\n        let currentUser = await JoblyApi.getCurrentUser(username);\n        setCurrentUser(currentUser);\n      } catch (err) {\n        setCurrentUser(null);\n      }\n      setInfoLoaded(true);\n    }\n    setInfoLoaded(false);\n    getCurrentUser();\n  }, [token]);\n\n  const handleLogOut = () => {\n    setCurrentUser(null);\n    setToken(null);\n  };\n\n  if (!infoLoaded) {\n    return <ClipLoader size={150} color=\"#123abc\" />;\n  }\n\n  return (\n    <UserContext.Provider value={{ currentUser, setCurrentUser }}>\n      <AppNav logout={handleLogOut} />\n      <Routes setToken={setToken} />\n    </UserContext.Provider>\n  );\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,MAAM,QAAQ,cAAc;AACrC,SAASC,UAAU,QAAQ,gBAAgB;AAC3C,OAAOC,eAAe,MAAM,yBAAyB;AACrD,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAOC,MAAM,MAAM,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9B,OAAO,MAAMC,gBAAgB,GAAG,aAAa;AAE7C,eAAe,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAC5B,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGf,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAM,CAACgB,WAAW,EAAEC,cAAc,CAAC,GAAGjB,QAAQ,CAAC,IAAI,CAAC;EAEpD,MAAM,CAACkB,KAAK,EAAEC,QAAQ,CAAC,GAAGf,eAAe,CAACO,gBAAgB,CAAC;EAE3DV,SAAS,CAAC,MAAM;IACd,eAAemB,cAAcA,CAAA,EAAG;MAC9B,IAAI;QACF,IAAI;UAAEC;QAAS,CAAC,GAAGnB,MAAM,CAACgB,KAAK,CAAC;QAChC,IAAIF,WAAW,GAAG,MAAMV,QAAQ,CAACc,cAAc,CAACC,QAAQ,CAAC;QACzDJ,cAAc,CAACD,WAAW,CAAC;MAC7B,CAAC,CAAC,OAAOM,GAAG,EAAE;QACZL,cAAc,CAAC,IAAI,CAAC;MACtB;MACAF,aAAa,CAAC,IAAI,CAAC;IACrB;IACAA,aAAa,CAAC,KAAK,CAAC;IACpBK,cAAc,CAAC,CAAC;EAClB,CAAC,EAAE,CAACF,KAAK,CAAC,CAAC;EAEX,MAAMK,YAAY,GAAGA,CAAA,KAAM;IACzBN,cAAc,CAAC,IAAI,CAAC;IACpBE,QAAQ,CAAC,IAAI,CAAC;EAChB,CAAC;EAED,IAAI,CAACL,UAAU,EAAE;IACf,oBAAOJ,OAAA,CAACP,UAAU;MAACqB,IAAI,EAAE,GAAI;MAACC,KAAK,EAAC;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAClD;EAEA,oBACEnB,OAAA,CAACH,WAAW,CAACuB,QAAQ;IAACC,KAAK,EAAE;MAAEf,WAAW;MAAEC;IAAe,CAAE;IAAAe,QAAA,gBAC3DtB,OAAA,CAACF,MAAM;MAACyB,MAAM,EAAEV;IAAa;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAChCnB,OAAA,CAACL,MAAM;MAACc,QAAQ,EAAEA;IAAS;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACV,CAAC;AAE3B;AAAChB,EAAA,CApCuBD,GAAG;EAAA,QAICR,eAAe;AAAA;AAAA8B,EAAA,GAJnBtB,GAAG;AAAA,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module"}