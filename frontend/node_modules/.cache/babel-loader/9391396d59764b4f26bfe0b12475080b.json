{"ast":null,"code":"import axios from \"axios\";\nimport { TOKEN_STORAGE_ID } from \"./App.js\";\nconst BASE_URL = process.env.BASE_URL || \"http://localhost:3001\";\nexport default class JoblyApi {\n  static async request(endpoint, params = {}, verb = \"get\", allowAnonymous = false) {\n    let _token = localStorage.getItem(TOKEN_STORAGE_ID);\n    console.debug(\"API Call:\", endpoint, params, verb);\n    let q;\n    let config;\n    if (allowAnonymous != true) {\n      axios.defaults.headers.common = {\n        'Authorization': `Bearer ${_token}`\n      };\n    }\n    if (verb === \"get\") {\n      q = axios.get(`${BASE_URL}/${endpoint}`, {\n        params: {\n          ...params\n        }\n      });\n    } else if (verb === \"post\") {\n      q = axios.post(`${BASE_URL}/${endpoint}`, {\n        ...params\n      });\n    } else if (verb === \"patch\") {\n      q = axios.patch(`${BASE_URL}/${endpoint}`, {\n        ...params\n      });\n    }\n    try {\n      return (await q).data;\n    } catch (err) {\n      console.error(\"API Error:\", err.response);\n      let message = err.response.data.message;\n      throw Array.isArray(message) ? message : [message];\n    }\n  }\n  static async getCompany(handle) {\n    let res = await this.request(`companies/${handle}`);\n    return res.company;\n  }\n  static async getCompanies(search) {\n    let res = await this.request(\"companies\", {\n      search\n    });\n    return res.companies;\n  }\n  static async getJobs(search) {\n    let res = await this.request(\"jobs\", {\n      search\n    });\n    return res.jobs;\n  }\n  static async applyToJob(id) {\n    let res = await this.request(`jobs/${id}/apply`, {}, \"post\");\n    return res.message;\n  }\n  static async login(data) {\n    let res = await this.request(`auth/token`, data, \"post\", true);\n    return res.token;\n  }\n  static async register(data) {\n    let res = await this.request(`users`, data, \"post\");\n    return res.token;\n  }\n  static async getCurrentUser(username) {\n    let res = await this.request(`users/${username}`);\n    return res.user;\n  }\n  static async saveProfile(username, data) {\n    let res = await this.request(`users/${username}`, data, \"patch\");\n    return res.user;\n  }\n}","map":{"version":3,"names":["axios","TOKEN_STORAGE_ID","BASE_URL","process","env","JoblyApi","request","endpoint","params","verb","allowAnonymous","_token","localStorage","getItem","console","debug","q","config","defaults","headers","common","get","post","patch","data","err","error","response","message","Array","isArray","getCompany","handle","res","company","getCompanies","search","companies","getJobs","jobs","applyToJob","id","login","token","register","getCurrentUser","username","user","saveProfile"],"sources":["/home/lemmiwinks/react-jobly/frontend/src/api.js"],"sourcesContent":["import axios from \"axios\";\nimport { TOKEN_STORAGE_ID } from \"./App.js\";\n\nconst BASE_URL = process.env.BASE_URL || \"http://localhost:3001\";\n\nexport default class JoblyApi {\n  static async request(endpoint, params = {}, verb = \"get\", allowAnonymous = false) {\n    let _token =localStorage.getItem(TOKEN_STORAGE_ID)\n\n    console.debug(\"API Call:\", endpoint, params, verb);\n\n    let q;\n    let config;\n\n    if (allowAnonymous != true){\n      axios.defaults.headers.common = {'Authorization': `Bearer ${_token}`};\n        \n    }\n\n    if (verb === \"get\") {\n      q = axios.get(`${BASE_URL}/${endpoint}`, {\n        params: { ...params },\n      });\n    } else if (verb === \"post\") {        \n        q = axios.post(`${BASE_URL}/${endpoint}`, { ...params });\n    } else if (verb === \"patch\") {\n      q = axios.patch(`${BASE_URL}/${endpoint}`, { ...params });\n    }\n\n    try {\n      return (await q).data;\n    } catch (err) {\n      console.error(\"API Error:\", err.response);\n      let message = err.response.data.message;\n      throw Array.isArray(message) ? message : [message];\n    }\n  }\n\n  static async getCompany(handle) {\n    let res = await this.request(`companies/${handle}`);\n    return res.company;\n  }\n\n  static async getCompanies(search) {\n    let res = await this.request(\"companies\", { search });\n    return res.companies;\n  }\n\n  static async getJobs(search) {\n    let res = await this.request(\"jobs\", { search });\n    return res.jobs;\n  }\n\n  static async applyToJob(id) {\n    let res = await this.request(`jobs/${id}/apply`, {}, \"post\");\n    return res.message;\n  }\n\n  static async login(data) {\n    let res = await this.request(`auth/token`, data, \"post\", true);\n    return res.token;\n  }\n\n  static async register(data) {\n    let res = await this.request(`users`, data, \"post\");\n    return res.token;\n  }\n\n  static async getCurrentUser(username) {\n    let res = await this.request(`users/${username}`);\n    return res.user;\n  }\n\n  static async saveProfile(username, data) {\n    let res = await this.request(`users/${username}`, data, \"patch\");\n    return res.user;\n  }\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}